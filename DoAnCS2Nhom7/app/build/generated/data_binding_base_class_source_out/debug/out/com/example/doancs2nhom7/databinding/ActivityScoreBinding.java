// Generated by view binder compiler. Do not edit!
package com.example.doancs2nhom7.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.doancs2nhom7.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScoreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView correctQ;

  @NonNull
  public final AppCompatButton reattemptB;

  @NonNull
  public final TextView score;

  @NonNull
  public final TextView time;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView totalQ;

  @NonNull
  public final TextView unAttemptedQ;

  @NonNull
  public final AppCompatButton viewAnswerB;

  @NonNull
  public final TextView wrongQ;

  private ActivityScoreBinding(@NonNull ConstraintLayout rootView, @NonNull TextView correctQ,
      @NonNull AppCompatButton reattemptB, @NonNull TextView score, @NonNull TextView time,
      @NonNull Toolbar toolbar, @NonNull TextView totalQ, @NonNull TextView unAttemptedQ,
      @NonNull AppCompatButton viewAnswerB, @NonNull TextView wrongQ) {
    this.rootView = rootView;
    this.correctQ = correctQ;
    this.reattemptB = reattemptB;
    this.score = score;
    this.time = time;
    this.toolbar = toolbar;
    this.totalQ = totalQ;
    this.unAttemptedQ = unAttemptedQ;
    this.viewAnswerB = viewAnswerB;
    this.wrongQ = wrongQ;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScoreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_score, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.correctQ;
      TextView correctQ = ViewBindings.findChildViewById(rootView, id);
      if (correctQ == null) {
        break missingId;
      }

      id = R.id.reattemptB;
      AppCompatButton reattemptB = ViewBindings.findChildViewById(rootView, id);
      if (reattemptB == null) {
        break missingId;
      }

      id = R.id.score;
      TextView score = ViewBindings.findChildViewById(rootView, id);
      if (score == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.totalQ;
      TextView totalQ = ViewBindings.findChildViewById(rootView, id);
      if (totalQ == null) {
        break missingId;
      }

      id = R.id.un_attemptedQ;
      TextView unAttemptedQ = ViewBindings.findChildViewById(rootView, id);
      if (unAttemptedQ == null) {
        break missingId;
      }

      id = R.id.view_answerB;
      AppCompatButton viewAnswerB = ViewBindings.findChildViewById(rootView, id);
      if (viewAnswerB == null) {
        break missingId;
      }

      id = R.id.wrongQ;
      TextView wrongQ = ViewBindings.findChildViewById(rootView, id);
      if (wrongQ == null) {
        break missingId;
      }

      return new ActivityScoreBinding((ConstraintLayout) rootView, correctQ, reattemptB, score,
          time, toolbar, totalQ, unAttemptedQ, viewAnswerB, wrongQ);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
