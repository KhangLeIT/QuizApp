// Generated by view binder compiler. Do not edit!
package com.example.doancs2nhom7.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.doancs2nhom7.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RankItemLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintRank;

  @NonNull
  public final TextView imgText;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView rank;

  @NonNull
  public final TextView score;

  private RankItemLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintRank, @NonNull TextView imgText, @NonNull TextView name,
      @NonNull TextView rank, @NonNull TextView score) {
    this.rootView = rootView;
    this.constraintRank = constraintRank;
    this.imgText = imgText;
    this.name = name;
    this.rank = rank;
    this.score = score;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RankItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RankItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rank_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RankItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout constraintRank = (ConstraintLayout) rootView;

      id = R.id.img_text;
      TextView imgText = ViewBindings.findChildViewById(rootView, id);
      if (imgText == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.rank;
      TextView rank = ViewBindings.findChildViewById(rootView, id);
      if (rank == null) {
        break missingId;
      }

      id = R.id.score;
      TextView score = ViewBindings.findChildViewById(rootView, id);
      if (score == null) {
        break missingId;
      }

      return new RankItemLayoutBinding((ConstraintLayout) rootView, constraintRank, imgText, name,
          rank, score);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
