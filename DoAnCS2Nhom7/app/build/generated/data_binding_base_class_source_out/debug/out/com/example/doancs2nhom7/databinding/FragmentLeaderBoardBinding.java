// Generated by view binder compiler. Do not edit!
package com.example.doancs2nhom7.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.doancs2nhom7.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLeaderBoardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView imgText;

  @NonNull
  public final LinearLayout ll1;

  @NonNull
  public final LinearLayout ll3;

  @NonNull
  public final TextView rank;

  @NonNull
  public final TextView totalScore;

  @NonNull
  public final TextView totalUsers;

  @NonNull
  public final RecyclerView usersView;

  private FragmentLeaderBoardBinding(@NonNull ConstraintLayout rootView, @NonNull TextView imgText,
      @NonNull LinearLayout ll1, @NonNull LinearLayout ll3, @NonNull TextView rank,
      @NonNull TextView totalScore, @NonNull TextView totalUsers, @NonNull RecyclerView usersView) {
    this.rootView = rootView;
    this.imgText = imgText;
    this.ll1 = ll1;
    this.ll3 = ll3;
    this.rank = rank;
    this.totalScore = totalScore;
    this.totalUsers = totalUsers;
    this.usersView = usersView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLeaderBoardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLeaderBoardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_leader_board, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLeaderBoardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_text;
      TextView imgText = ViewBindings.findChildViewById(rootView, id);
      if (imgText == null) {
        break missingId;
      }

      id = R.id.ll1;
      LinearLayout ll1 = ViewBindings.findChildViewById(rootView, id);
      if (ll1 == null) {
        break missingId;
      }

      id = R.id.ll3;
      LinearLayout ll3 = ViewBindings.findChildViewById(rootView, id);
      if (ll3 == null) {
        break missingId;
      }

      id = R.id.rank;
      TextView rank = ViewBindings.findChildViewById(rootView, id);
      if (rank == null) {
        break missingId;
      }

      id = R.id.total_score;
      TextView totalScore = ViewBindings.findChildViewById(rootView, id);
      if (totalScore == null) {
        break missingId;
      }

      id = R.id.total_users;
      TextView totalUsers = ViewBindings.findChildViewById(rootView, id);
      if (totalUsers == null) {
        break missingId;
      }

      id = R.id.users_view;
      RecyclerView usersView = ViewBindings.findChildViewById(rootView, id);
      if (usersView == null) {
        break missingId;
      }

      return new FragmentLeaderBoardBinding((ConstraintLayout) rootView, imgText, ll1, ll3, rank,
          totalScore, totalUsers, usersView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
